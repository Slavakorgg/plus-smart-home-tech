services:
  kafka:
    image: confluentinc/confluent-local:7.4.3
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092" # for client connections
      - "9101:9101" # JMX
    restart: unless-stopped
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092'
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092'
      CLUSTER_ID: 'K0EA9p0yEe6MkAAAAkKsEg'

  kafka-init-topics:
    image: confluentinc/confluent-local:7.4.3
    container_name: kafka-init-topics
    depends_on:
      - kafka
    command: "bash -c \
                'kafka-topics --create --topic telemetry.sensors.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.snapshots.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092 && \
                kafka-topics --create --topic telemetry.hubs.v1 \
                             --partitions 1 --replication-factor 1 --if-not-exists \
                             --bootstrap-server kafka:29092'"
    init: true

  db:
    image: postgres:alpine
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - ./postgres:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=shtech
      - POSTGRES_USER=shtech
      - POSTGRES_PASSWORD=verysecretword
    healthcheck:
      test: pg_isready -q -d $$POSTGRES_DB -U $$POSTGRES_USER
      timeout: 5s
      interval: 5s
      retries: 10

  discovery-server:
    build: infra/discovery-server
    image: discovery-server
    container_name: discovery-server
    restart: on-failure
    ports:
      - "8761:8761"
    environment:
      - eureka.instance.hostname=discovery-server

  config-server:
    build: infra/config-server
    image: config-server
    container_name: config-server
    restart: on-failure
    ports:
      - "8181:8181"
    depends_on:
      - discovery-server
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=config-server
      - server.port=8181

  gateway-server:
    build: infra/gateway
    image: gateway-server
    container_name: gateway-server
    restart: on-failure
    ports:
      - "8080:8080"
    depends_on:
      - discovery-server
      - config-server
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=gateway-server
      - server.port=8080

  shopping-store:
    build: commerce/shopping-store
    image: shopping-store
    container_name: shopping-store
    restart: on-failure
    ports:
      - "8185:8185"
    depends_on:
      - discovery-server
      - config-server
      - db
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=shopping-store
      - server.port=8185
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shtech?currentSchema=store

  warehouse:
    build: commerce/warehouse
    image: warehouse
    container_name: warehouse
    restart: on-failure
    ports:
      - "8186:8186"
    depends_on:
      - discovery-server
      - config-server
      - db
      - shopping-store
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=warehouse
      - server.port=8186
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shtech?currentSchema=warehouse

  shopping-cart:
    build: commerce/shopping-cart
    image: shopping-cart
    container_name: shopping-cart
    restart: on-failure
    ports:
      - "8187:8187"
    depends_on:
      - discovery-server
      - config-server
      - db
      - shopping-store
      - warehouse
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=shopping-cart
      - server.port=8187
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shtech?currentSchema=cart

  delivery:
    build: commerce/delivery
    image: delivery
    container_name: delivery
    restart: on-failure
    ports:
      - "8188:8188"
    depends_on:
      - discovery-server
      - config-server
      - db
      - shopping-store
      - warehouse
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=delivery
      - server.port=8188
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shtech?currentSchema=delivery

  order:
    build: commerce/order
    image: order
    container_name: order
    restart: on-failure
    ports:
      - "8189:8189"
    depends_on:
      - discovery-server
      - config-server
      - db
      - shopping-store
      - warehouse
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=order
      - server.port=8189
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shtech?currentSchema=orders

  payment:
    build: commerce/payment
    image: payment
    container_name: payment
    restart: on-failure
    ports:
      - "8190:8190"
    depends_on:
      - discovery-server
      - config-server
      - db
      - shopping-store
      - warehouse
    environment:
      - eureka.client.serviceUrl.defaultZone=http://discovery-server:8761/eureka/
      - eureka.instance.hostname=payment
      - server.port=8190
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/shtech?currentSchema=payment